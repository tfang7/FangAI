Tommy Fang
Game AI Final
12/10/2016
FangBot V1
1. Features
	a. HFSM States
		The HSFM states were designed to allow extremely flexible control over individual units within a specific group.
		The bot can use this HSFM state design in order to determine the actions of a specific unit types in groups.
		The three states that are currently implemented are 
			Moving 
			Idling
			Attacking
		In the Moving state, units attempt to group to the center of their formation. 
		If an enemy is nearby while the unit is within this hierarchy of states, 
		this unit will transition to the to the Attacking state. Each of these formation states contain
		more states that determine the units actions based on their unit type.
		Marines will attempt to kite the enemy if an enemy is close enough.
		Medics will attempt to move towards the center of the group in the move state, but
		medics can heal when the formation is attacking.
		Tanks will attempt to siege the enemy in the Attacking state if possible
		and unsiege and run away in the move state.
		
	b. Flocking
		I originally intended to calculate the position for each unit in the formation, but found it was easier
		to use flocking because the units just needed to move towards a common target while staying near the
		center of flock's position. This dramatically increased performance after being implemented and allows for emergent behavior.
		There are set values for the separation/cohesion, so units will attempt to move as these values are tuned.
	c. Base Management
		A large portion of this project involved setting up a code structure that managed the operations of a base. This involves
		keeping track of tile positions that have a command center on top of them and creating data structures to hold
		the SCVs and their roles for that base. SCVs needed to know when to harvest gas, mine minerals, build structures, and scout.
		It was easier to implement this with a simple finite state machines and setting up rules for when to build a specific building.
		Builders must be told to not build a building if the game player has enough resources and if there is not another SCV building it already.
		If the AI has enough minerals, it will attempt to expand to the closest mineral cluster. This increases the number of barracks and factories
		that can be built.
		This AI can tech up to the highest tech, but I did not implement a build order manager so that the AI can use different strategies.
	d. Strategy
		The AI will attempt to gather up enough forces before attacking the enemy base. If the enemy base hasn't been found, an scv is sent to scout all of the base locations.
		The AI will create formations when units are created, the formations can support groups up to any size, once a formation size is large enough, the formation's 
		target is set to the position where the enemy was last seen. I use a count of marines to determine sufficient attack force.
		The Formation moves towards the enemy base in the MOVE state and transitions to ATTACKING if within range of enemies until victory conditions are met.
	
Conclusion
	This was definitely a fun project because I was very interested in the topic. I used my knowledge playing the game in order to optimize combat in the game.
	I discovered an efficient and quick way to organize behaviors. I believe i was quite successful with my project because the units worked exactly as I planned it to be without
	an extremely complex structure. The AI is able to push forward with tanks, medics, and marines very effectively which is a strong build composition in this game.
	The units tendency to group together in combat situations increases the surface area they can obtain around the enemy force.

	There are a few optimizations I need to make in order to get the AI ready for the competition, overall I think my strategy is effective and it will be able to beat some competitors.
	I need to improve performance by making smarter conditionals and rules for the AI. I want to finish the base expansion algorithm and create options to make it easily change unit
	composition based on enemy vision.
	

HOW TO RUN
----------
BWAPI Java Tutorial
http://sscaitournament.com/index.php?action=tutorial

Then import the project found in in this folder as an existing project to eclipse and run.